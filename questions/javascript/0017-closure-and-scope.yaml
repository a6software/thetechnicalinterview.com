---
title: "Closure and Scope"
question: |
  What will the following code output?
  
  ```js
  function outer() {
    let x = 10;
    return function inner() {
      x++;
      return x;
    }
  }
  
  let myFunc = outer();
  console.log(myFunc());
  console.log(myFunc());
  ```
hint: |
  Think about the scope of the variables and functions
possible_answers:
  - "11,12"
  - "1,2"
  - "10,11"
  - "Error"
correct_answers:
  - "11,12"
explanation: |
  The outer function returns the inner function and assigns it to the myFunc variable. The inner function has access to the x variable in the outer function's scope because of closure. When the inner function is invoked, it increments the value of x and returns it, so the first console.log call will output 11 and the second will output 12.
tags:
  - javascript
  - closure
  - scope
credit:
  - Generated by ChatGPT
